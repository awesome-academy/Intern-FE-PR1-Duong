/*
  1. Use a more-intuitive box-sizing model.
*/
@import './variables';
@import './mixins';
*,
*::before,
*::after {
  box-sizing: border-box;
  font-size: 10px;
}
/*
  2. Remove default margin
*/
* {
  margin: 0;
}
/*
  3. Allow percentage-based heights in the application
*/
html,
body {
  height: 100%;
}
/*
  Typographic tweaks!
  4. Add accessible line-height
  5. Improve text rendering
*/
body {
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
}
/*
  6. Improve media defaults
*/
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}
/*
  7. Remove built-in form typography styles
*/
input,
button,
textarea,
select {
  font: inherit;
}
/*
  8. Avoid text overflows
*/
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}
/*
  9. Create a root stacking context
*/
#root,
#__next {
  isolation: isolate;
}
.body {
  font-family: $secondary-font;
}
.wrapper {
  max-width: 112rem;
  margin: 0 auto;
  @include respond-to('tablet-and-down') {
    padding-inline: 3rem;
  }
  @include respond-to('mobile-and-down') {
    padding-inline: 1rem;
  }
}
button,
.btn {
  border: none;
  outline: none;
  background-color: $white;
  text-transform: uppercase;

  &--primary {
    @include hoverTransition($white, darken($primary, 20%));

    padding: 1rem 4rem;
    font-size: 1.4rem;
    background-color: $primary;
    color: $white;
    border-radius: 2rem;
  }
  &--outline {
    @include hoverTransition($white, $primary);

    padding: 1rem 4rem;
    font-size: 1.4rem;
    background-color: $white;
    color: $primary;
    border-radius: 2rem;
    border: 1px solid $primary;
  }

  &--circle {
    @include hoverTransition($white, $dark);
    padding: 1rem 1.25rem;
    border-radius: 50%;
    background-color: $white;
    margin-inline: 1rem;
    border: 1px solid $dark-lighter;
  }
}

.ratio-image {
  width: 100%;
  object-fit: cover;
  aspect-ratio: var(--ratio);
}

.form {
  &__input {
    @include customFont(
      $size: 1.2rem,
      $fontFamily: $secondary-font,
      $color: $dark
    );
    padding-left: 1rem;
    height: 5rem;
    outline: none;
  }

  &__label {
    @include customFont(
      $size: 1.2rem,
      $fontFamily: $secondary-font,
      $color: $dark
    );
    display: block;
    padding-block: 1rem;

    &--checkbox {
      display: inline;
      padding-left: 1rem;
    }
  }

  &__input {
    width: 90%;

    @include respond-to('mobile-and-down') {
      width: 100%;
    }
  }
}

.grid {
  @include gridTemplate($column: 12, $row: '', $gap: 0);

  grid-template-columns: repeat(12, 1fr);
}

/* spanning cols */

.col-2 {
  grid-column: auto/span 2;
}

.col-3 {
  grid-column: auto/span 3;
}

.col-6 {
  grid-column: auto/span 6;
}

.col-8 {
  grid-column: auto/span 8;
}

.col-12 {
  grid-column: auto / span 12;
}

/* spanning rows */

.row-2 {
  grid-row: auto/span 2;
}

/* Full Width mobile*/
@include respond-to('mobile-and-down') {
  .col-1,
  .col-2,
  .col-3,
  .col-4,
  .col-5,
  .col-6,
  .col-7,
  .col-8,
  .col-9,
  .col-10,
  .col-11,
  .col-12 {
    grid-column: auto/span 12;
  }
}
